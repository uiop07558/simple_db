// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: definition.proto

#include "definition.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace objectstore {
PROTOBUF_CONSTEXPR CreateTableRequest::CreateTableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fields_)*/{}
  , /*decltype(_impl_.tablename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTableRequestDefaultTypeInternal() {}
  union {
    CreateTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTableRequestDefaultTypeInternal _CreateTableRequest_default_instance_;
PROTOBUF_CONSTEXPR GetTableInfoRequest::GetTableInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tablename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTableInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTableInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTableInfoRequestDefaultTypeInternal() {}
  union {
    GetTableInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTableInfoRequestDefaultTypeInternal _GetTableInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR FieldDef::FieldDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_.iskey_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FieldDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldDefDefaultTypeInternal() {}
  union {
    FieldDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldDefDefaultTypeInternal _FieldDef_default_instance_;
PROTOBUF_CONSTEXPR CreateTableResponse::CreateTableResponse(
    ::_pbi::ConstantInitialized) {}
struct CreateTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTableResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTableResponseDefaultTypeInternal() {}
  union {
    CreateTableResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTableResponseDefaultTypeInternal _CreateTableResponse_default_instance_;
PROTOBUF_CONSTEXPR GetTableInfoResponse::GetTableInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fields_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTableInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTableInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTableInfoResponseDefaultTypeInternal() {}
  union {
    GetTableInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTableInfoResponseDefaultTypeInternal _GetTableInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR TransactionRequest::TransactionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.payload_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct TransactionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionRequestDefaultTypeInternal() {}
  union {
    TransactionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionRequestDefaultTypeInternal _TransactionRequest_default_instance_;
PROTOBUF_CONSTEXPR TransactionResponse::TransactionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.payload_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct TransactionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionResponseDefaultTypeInternal() {}
  union {
    TransactionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionResponseDefaultTypeInternal _TransactionResponse_default_instance_;
PROTOBUF_CONSTEXPR FieldData::FieldData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.payload_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct FieldDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldDataDefaultTypeInternal() {}
  union {
    FieldData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldDataDefaultTypeInternal _FieldData_default_instance_;
PROTOBUF_CONSTEXPR Field::Field(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldDefaultTypeInternal() {}
  union {
    Field _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldDefaultTypeInternal _Field_default_instance_;
PROTOBUF_CONSTEXPR StartTransactionRequest::StartTransactionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tablename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.writable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StartTransactionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartTransactionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartTransactionRequestDefaultTypeInternal() {}
  union {
    StartTransactionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartTransactionRequestDefaultTypeInternal _StartTransactionRequest_default_instance_;
PROTOBUF_CONSTEXPR StartTransactionResponse::StartTransactionResponse(
    ::_pbi::ConstantInitialized) {}
struct StartTransactionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartTransactionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartTransactionResponseDefaultTypeInternal() {}
  union {
    StartTransactionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartTransactionResponseDefaultTypeInternal _StartTransactionResponse_default_instance_;
PROTOBUF_CONSTEXPR CommitTransactionRequest::CommitTransactionRequest(
    ::_pbi::ConstantInitialized) {}
struct CommitTransactionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitTransactionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitTransactionRequestDefaultTypeInternal() {}
  union {
    CommitTransactionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitTransactionRequestDefaultTypeInternal _CommitTransactionRequest_default_instance_;
PROTOBUF_CONSTEXPR CommitTransactionResponse::CommitTransactionResponse(
    ::_pbi::ConstantInitialized) {}
struct CommitTransactionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitTransactionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitTransactionResponseDefaultTypeInternal() {}
  union {
    CommitTransactionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitTransactionResponseDefaultTypeInternal _CommitTransactionResponse_default_instance_;
PROTOBUF_CONSTEXPR RollbackTransactionRequest::RollbackTransactionRequest(
    ::_pbi::ConstantInitialized) {}
struct RollbackTransactionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackTransactionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackTransactionRequestDefaultTypeInternal() {}
  union {
    RollbackTransactionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackTransactionRequestDefaultTypeInternal _RollbackTransactionRequest_default_instance_;
PROTOBUF_CONSTEXPR RollbackTransactionResponse::RollbackTransactionResponse(
    ::_pbi::ConstantInitialized) {}
struct RollbackTransactionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackTransactionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackTransactionResponseDefaultTypeInternal() {}
  union {
    RollbackTransactionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackTransactionResponseDefaultTypeInternal _RollbackTransactionResponse_default_instance_;
PROTOBUF_CONSTEXPR InsertRowRequest::InsertRowRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InsertRowRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InsertRowRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InsertRowRequestDefaultTypeInternal() {}
  union {
    InsertRowRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InsertRowRequestDefaultTypeInternal _InsertRowRequest_default_instance_;
PROTOBUF_CONSTEXPR InsertRowResponse::InsertRowResponse(
    ::_pbi::ConstantInitialized) {}
struct InsertRowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InsertRowResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InsertRowResponseDefaultTypeInternal() {}
  union {
    InsertRowResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InsertRowResponseDefaultTypeInternal _InsertRowResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRowRequest::DeleteRowRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.conditions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteRowRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRowRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRowRequestDefaultTypeInternal() {}
  union {
    DeleteRowRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRowRequestDefaultTypeInternal _DeleteRowRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRowResponse::DeleteRowResponse(
    ::_pbi::ConstantInitialized) {}
struct DeleteRowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRowResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRowResponseDefaultTypeInternal() {}
  union {
    DeleteRowResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRowResponseDefaultTypeInternal _DeleteRowResponse_default_instance_;
PROTOBUF_CONSTEXPR QueryRowsRequest::QueryRowsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.conditions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryRowsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryRowsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryRowsRequestDefaultTypeInternal() {}
  union {
    QueryRowsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryRowsRequestDefaultTypeInternal _QueryRowsRequest_default_instance_;
PROTOBUF_CONSTEXPR QueryRowResponse::QueryRowResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{}
  , /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryRowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryRowResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryRowResponseDefaultTypeInternal() {}
  union {
    QueryRowResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryRowResponseDefaultTypeInternal _QueryRowResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateRowRequest::UpdateRowRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{}
  , /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateRowRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRowRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRowRequestDefaultTypeInternal() {}
  union {
    UpdateRowRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRowRequestDefaultTypeInternal _UpdateRowRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRowResponse::UpdateRowResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateRowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRowResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRowResponseDefaultTypeInternal() {}
  union {
    UpdateRowResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRowResponseDefaultTypeInternal _UpdateRowResponse_default_instance_;
PROTOBUF_CONSTEXPR ErrorResponse::ErrorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ErrorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorResponseDefaultTypeInternal() {}
  union {
    ErrorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorResponseDefaultTypeInternal _ErrorResponse_default_instance_;
}  // namespace objectstore
static ::_pb::Metadata file_level_metadata_definition_2eproto[24];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_definition_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_definition_2eproto = nullptr;

const uint32_t TableStruct_definition_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::CreateTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::CreateTableRequest, _impl_.tablename_),
  PROTOBUF_FIELD_OFFSET(::objectstore::CreateTableRequest, _impl_.fields_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::GetTableInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::GetTableInfoRequest, _impl_.tablename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::FieldDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::FieldDef, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::objectstore::FieldDef, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::objectstore::FieldDef, _impl_.iskey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::CreateTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::GetTableInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::GetTableInfoResponse, _impl_.fields_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::TransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::objectstore::TransactionRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::objectstore::TransactionRequest, _impl_.payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::TransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::objectstore::TransactionResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::objectstore::TransactionResponse, _impl_.payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::FieldData, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::objectstore::FieldData, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::objectstore::FieldData, _impl_.payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::Field, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::objectstore::Field, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::objectstore::Field, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::StartTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::StartTransactionRequest, _impl_.tablename_),
  PROTOBUF_FIELD_OFFSET(::objectstore::StartTransactionRequest, _impl_.writable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::StartTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::CommitTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::CommitTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::RollbackTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::RollbackTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::InsertRowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::InsertRowRequest, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::InsertRowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::DeleteRowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::DeleteRowRequest, _impl_.conditions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::DeleteRowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::QueryRowsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::QueryRowsRequest, _impl_.conditions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::QueryRowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::QueryRowResponse, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::objectstore::QueryRowResponse, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::UpdateRowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::UpdateRowRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::objectstore::UpdateRowRequest, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::UpdateRowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::objectstore::ErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::objectstore::ErrorResponse, _impl_.message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::objectstore::CreateTableRequest)},
  { 8, -1, -1, sizeof(::objectstore::GetTableInfoRequest)},
  { 15, -1, -1, sizeof(::objectstore::FieldDef)},
  { 24, -1, -1, sizeof(::objectstore::CreateTableResponse)},
  { 30, -1, -1, sizeof(::objectstore::GetTableInfoResponse)},
  { 37, -1, -1, sizeof(::objectstore::TransactionRequest)},
  { 51, -1, -1, sizeof(::objectstore::TransactionResponse)},
  { 66, -1, -1, sizeof(::objectstore::FieldData)},
  { 77, -1, -1, sizeof(::objectstore::Field)},
  { 86, -1, -1, sizeof(::objectstore::StartTransactionRequest)},
  { 94, -1, -1, sizeof(::objectstore::StartTransactionResponse)},
  { 100, -1, -1, sizeof(::objectstore::CommitTransactionRequest)},
  { 106, -1, -1, sizeof(::objectstore::CommitTransactionResponse)},
  { 112, -1, -1, sizeof(::objectstore::RollbackTransactionRequest)},
  { 118, -1, -1, sizeof(::objectstore::RollbackTransactionResponse)},
  { 124, -1, -1, sizeof(::objectstore::InsertRowRequest)},
  { 131, -1, -1, sizeof(::objectstore::InsertRowResponse)},
  { 137, -1, -1, sizeof(::objectstore::DeleteRowRequest)},
  { 144, -1, -1, sizeof(::objectstore::DeleteRowResponse)},
  { 150, -1, -1, sizeof(::objectstore::QueryRowsRequest)},
  { 157, -1, -1, sizeof(::objectstore::QueryRowResponse)},
  { 165, -1, -1, sizeof(::objectstore::UpdateRowRequest)},
  { 173, -1, -1, sizeof(::objectstore::UpdateRowResponse)},
  { 179, -1, -1, sizeof(::objectstore::ErrorResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::objectstore::_CreateTableRequest_default_instance_._instance,
  &::objectstore::_GetTableInfoRequest_default_instance_._instance,
  &::objectstore::_FieldDef_default_instance_._instance,
  &::objectstore::_CreateTableResponse_default_instance_._instance,
  &::objectstore::_GetTableInfoResponse_default_instance_._instance,
  &::objectstore::_TransactionRequest_default_instance_._instance,
  &::objectstore::_TransactionResponse_default_instance_._instance,
  &::objectstore::_FieldData_default_instance_._instance,
  &::objectstore::_Field_default_instance_._instance,
  &::objectstore::_StartTransactionRequest_default_instance_._instance,
  &::objectstore::_StartTransactionResponse_default_instance_._instance,
  &::objectstore::_CommitTransactionRequest_default_instance_._instance,
  &::objectstore::_CommitTransactionResponse_default_instance_._instance,
  &::objectstore::_RollbackTransactionRequest_default_instance_._instance,
  &::objectstore::_RollbackTransactionResponse_default_instance_._instance,
  &::objectstore::_InsertRowRequest_default_instance_._instance,
  &::objectstore::_InsertRowResponse_default_instance_._instance,
  &::objectstore::_DeleteRowRequest_default_instance_._instance,
  &::objectstore::_DeleteRowResponse_default_instance_._instance,
  &::objectstore::_QueryRowsRequest_default_instance_._instance,
  &::objectstore::_QueryRowResponse_default_instance_._instance,
  &::objectstore::_UpdateRowRequest_default_instance_._instance,
  &::objectstore::_UpdateRowResponse_default_instance_._instance,
  &::objectstore::_ErrorResponse_default_instance_._instance,
};

const char descriptor_table_protodef_definition_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020definition.proto\022\013objectstore\"K\n\022Creat"
  "eTableRequest\022\021\n\ttableName\030\001 \001(\t\022\"\n\006fiel"
  "ds\030\002 \003(\0132\022.objectstore.Field\"(\n\023GetTable"
  "InfoRequest\022\021\n\ttableName\030\001 \001(\t\"M\n\010FieldD"
  "ef\022\014\n\004name\030\001 \001(\t\022$\n\004type\030\002 \001(\0162\026.objects"
  "tore.FieldType\022\r\n\005isKey\030\003 \001(\010\"\025\n\023CreateT"
  "ableResponse\"=\n\024GetTableInfoResponse\022%\n\006"
  "fields\030\001 \003(\0132\025.objectstore.FieldDef\"\275\003\n\022"
  "TransactionRequest\022@\n\020startTransaction\030\001"
  " \001(\0132$.objectstore.StartTransactionReque"
  "stH\000\0222\n\tinsertRow\030\002 \001(\0132\035.objectstore.In"
  "sertRowRequestH\000\0222\n\tdeleteRow\030\003 \001(\0132\035.ob"
  "jectstore.DeleteRowRequestH\000\0222\n\tqueryRow"
  "s\030\004 \001(\0132\035.objectstore.QueryRowsRequestH\000"
  "\0222\n\tupdateRow\030\005 \001(\0132\035.objectstore.Update"
  "RowRequestH\000\022B\n\021commitTransaction\030\006 \001(\0132"
  "%.objectstore.CommitTransactionRequestH\000"
  "\022F\n\023rollbackTransaction\030\007 \001(\0132\'.objectst"
  "ore.RollbackTransactionRequestH\000B\t\n\007payl"
  "oad\"\361\003\n\023TransactionResponse\022A\n\020startTran"
  "saction\030\001 \001(\0132%.objectstore.StartTransac"
  "tionResponseH\000\0223\n\tinsertRow\030\002 \001(\0132\036.obje"
  "ctstore.InsertRowResponseH\000\0223\n\tdeleteRow"
  "\030\003 \001(\0132\036.objectstore.DeleteRowResponseH\000"
  "\0222\n\tqueryRows\030\004 \001(\0132\035.objectstore.QueryR"
  "owResponseH\000\0223\n\tupdateRow\030\005 \001(\0132\036.object"
  "store.UpdateRowResponseH\000\022C\n\021commitTrans"
  "action\030\006 \001(\0132&.objectstore.CommitTransac"
  "tionResponseH\000\022G\n\023rollbackTransaction\030\007 "
  "\001(\0132(.objectstore.RollbackTransactionRes"
  "ponseH\000\022+\n\005error\030\010 \001(\0132\032.objectstore.Err"
  "orResponseH\000B\t\n\007payload\"p\n\tFieldData\022\023\n\t"
  "intMember\030\001 \001(\003H\000\022\025\n\013floatMember\030\002 \001(\001H\000"
  "\022\024\n\nboolMember\030\003 \001(\010H\000\022\026\n\014stringMember\030\004"
  " \001(\tH\000B\t\n\007payload\"a\n\005Field\022\014\n\004name\030\001 \001(\t"
  "\022$\n\004type\030\002 \001(\0162\026.objectstore.FieldType\022$"
  "\n\004data\030\003 \001(\0132\026.objectstore.FieldData\">\n\027"
  "StartTransactionRequest\022\021\n\ttableName\030\001 \001"
  "(\t\022\020\n\010writable\030\002 \001(\010\"\032\n\030StartTransaction"
  "Response\"\032\n\030CommitTransactionRequest\"\033\n\031"
  "CommitTransactionResponse\"\034\n\032RollbackTra"
  "nsactionRequest\"\035\n\033RollbackTransactionRe"
  "sponse\"5\n\020InsertRowRequest\022!\n\005value\030\001 \003("
  "\0132\022.objectstore.Field\"\023\n\021InsertRowRespon"
  "se\":\n\020DeleteRowRequest\022&\n\nconditions\030\001 \003"
  "(\0132\022.objectstore.Field\"\023\n\021DeleteRowRespo"
  "nse\":\n\020QueryRowsRequest\022&\n\nconditions\030\001 "
  "\003(\0132\022.objectstore.Field\"V\n\020QueryRowRespo"
  "nse\022\037\n\003key\030\001 \003(\0132\022.objectstore.Field\022!\n\005"
  "value\030\002 \003(\0132\022.objectstore.Field\"V\n\020Updat"
  "eRowRequest\022\037\n\003key\030\001 \003(\0132\022.objectstore.F"
  "ield\022!\n\005value\030\002 \003(\0132\022.objectstore.Field\""
  "\023\n\021UpdateRowResponse\" \n\rErrorResponse\022\017\n"
  "\007message\030\001 \001(\t*\?\n\tFieldType\022\010\n\004Null\020\000\022\007\n"
  "\003Int\020\001\022\t\n\005Float\020\002\022\010\n\004Bool\020\003\022\n\n\006String\020\0042"
  "\212\002\n\013ObjectStore\022P\n\013CreateTable\022\037.objects"
  "tore.CreateTableRequest\032 .objectstore.Cr"
  "eateTableResponse\022S\n\014GetTableInfo\022 .obje"
  "ctstore.GetTableInfoRequest\032!.objectstor"
  "e.GetTableInfoResponse\022T\n\013Transaction\022\037."
  "objectstore.TransactionRequest\032 .objects"
  "tore.TransactionResponse(\0010\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_definition_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_definition_2eproto = {
    false, false, 2476, descriptor_table_protodef_definition_2eproto,
    "definition.proto",
    &descriptor_table_definition_2eproto_once, nullptr, 0, 24,
    schemas, file_default_instances, TableStruct_definition_2eproto::offsets,
    file_level_metadata_definition_2eproto, file_level_enum_descriptors_definition_2eproto,
    file_level_service_descriptors_definition_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_definition_2eproto_getter() {
  return &descriptor_table_definition_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_definition_2eproto(&descriptor_table_definition_2eproto);
namespace objectstore {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FieldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_definition_2eproto);
  return file_level_enum_descriptors_definition_2eproto[0];
}
bool FieldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CreateTableRequest::_Internal {
 public:
};

CreateTableRequest::CreateTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.CreateTableRequest)
}
CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateTableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fields_){from._impl_.fields_}
    , decltype(_impl_.tablename_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tablename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tablename().empty()) {
    _this->_impl_.tablename_.Set(from._internal_tablename(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:objectstore.CreateTableRequest)
}

inline void CreateTableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.fields_){arena}
    , decltype(_impl_.tablename_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tablename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:objectstore.CreateTableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fields_.~RepeatedPtrField();
  _impl_.tablename_.Destroy();
}

void CreateTableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.CreateTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fields_.Clear();
  _impl_.tablename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tableName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tablename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "objectstore.CreateTableRequest.tableName"));
        } else
          goto handle_unusual;
        continue;
      // repeated .objectstore.Field fields = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.CreateTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (!this->_internal_tablename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablename().data(), static_cast<int>(this->_internal_tablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "objectstore.CreateTableRequest.tableName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tablename(), target);
  }

  // repeated .objectstore.Field fields = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.CreateTableRequest)
  return target;
}

size_t CreateTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.CreateTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .objectstore.Field fields = 2;
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->_impl_.fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string tableName = 1;
  if (!this->_internal_tablename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateTableRequest::GetClassData() const { return &_class_data_; }


void CreateTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateTableRequest*>(&to_msg);
  auto& from = static_cast<const CreateTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.CreateTableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.fields_.MergeFrom(from._impl_.fields_);
  if (!from._internal_tablename().empty()) {
    _this->_internal_set_tablename(from._internal_tablename());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {
  return true;
}

void CreateTableRequest::InternalSwap(CreateTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.fields_.InternalSwap(&other->_impl_.fields_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tablename_, lhs_arena,
      &other->_impl_.tablename_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[0]);
}

// ===================================================================

class GetTableInfoRequest::_Internal {
 public:
};

GetTableInfoRequest::GetTableInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.GetTableInfoRequest)
}
GetTableInfoRequest::GetTableInfoRequest(const GetTableInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTableInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tablename_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tablename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tablename().empty()) {
    _this->_impl_.tablename_.Set(from._internal_tablename(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:objectstore.GetTableInfoRequest)
}

inline void GetTableInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tablename_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tablename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTableInfoRequest::~GetTableInfoRequest() {
  // @@protoc_insertion_point(destructor:objectstore.GetTableInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTableInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tablename_.Destroy();
}

void GetTableInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTableInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.GetTableInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tablename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTableInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tableName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tablename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "objectstore.GetTableInfoRequest.tableName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTableInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.GetTableInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (!this->_internal_tablename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablename().data(), static_cast<int>(this->_internal_tablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "objectstore.GetTableInfoRequest.tableName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tablename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.GetTableInfoRequest)
  return target;
}

size_t GetTableInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.GetTableInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tableName = 1;
  if (!this->_internal_tablename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTableInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTableInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTableInfoRequest::GetClassData() const { return &_class_data_; }


void GetTableInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTableInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetTableInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.GetTableInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tablename().empty()) {
    _this->_internal_set_tablename(from._internal_tablename());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTableInfoRequest::CopyFrom(const GetTableInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.GetTableInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableInfoRequest::IsInitialized() const {
  return true;
}

void GetTableInfoRequest::InternalSwap(GetTableInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tablename_, lhs_arena,
      &other->_impl_.tablename_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTableInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[1]);
}

// ===================================================================

class FieldDef::_Internal {
 public:
};

FieldDef::FieldDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.FieldDef)
}
FieldDef::FieldDef(const FieldDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FieldDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.iskey_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.type_, &from._impl_.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.iskey_) -
    reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.iskey_));
  // @@protoc_insertion_point(copy_constructor:objectstore.FieldDef)
}

inline void FieldDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.type_){0}
    , decltype(_impl_.iskey_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FieldDef::~FieldDef() {
  // @@protoc_insertion_point(destructor:objectstore.FieldDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FieldDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void FieldDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FieldDef::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.FieldDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.iskey_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.iskey_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FieldDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "objectstore.FieldDef.name"));
        } else
          goto handle_unusual;
        continue;
      // .objectstore.FieldType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::objectstore::FieldType>(val));
        } else
          goto handle_unusual;
        continue;
      // bool isKey = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.iskey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FieldDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.FieldDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "objectstore.FieldDef.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .objectstore.FieldType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // bool isKey = 3;
  if (this->_internal_iskey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_iskey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.FieldDef)
  return target;
}

size_t FieldDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.FieldDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .objectstore.FieldType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // bool isKey = 3;
  if (this->_internal_iskey() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FieldDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FieldDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FieldDef::GetClassData() const { return &_class_data_; }


void FieldDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FieldDef*>(&to_msg);
  auto& from = static_cast<const FieldDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.FieldDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_iskey() != 0) {
    _this->_internal_set_iskey(from._internal_iskey());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FieldDef::CopyFrom(const FieldDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.FieldDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldDef::IsInitialized() const {
  return true;
}

void FieldDef::InternalSwap(FieldDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FieldDef, _impl_.iskey_)
      + sizeof(FieldDef::_impl_.iskey_)
      - PROTOBUF_FIELD_OFFSET(FieldDef, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FieldDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[2]);
}

// ===================================================================

class CreateTableResponse::_Internal {
 public:
};

CreateTableResponse::CreateTableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.CreateTableResponse)
}
CreateTableResponse::CreateTableResponse(const CreateTableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CreateTableResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.CreateTableResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateTableResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateTableResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CreateTableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[3]);
}

// ===================================================================

class GetTableInfoResponse::_Internal {
 public:
};

GetTableInfoResponse::GetTableInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.GetTableInfoResponse)
}
GetTableInfoResponse::GetTableInfoResponse(const GetTableInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTableInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fields_){from._impl_.fields_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.GetTableInfoResponse)
}

inline void GetTableInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.fields_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetTableInfoResponse::~GetTableInfoResponse() {
  // @@protoc_insertion_point(destructor:objectstore.GetTableInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTableInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fields_.~RepeatedPtrField();
}

void GetTableInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTableInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.GetTableInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fields_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTableInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .objectstore.FieldDef fields = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTableInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.GetTableInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .objectstore.FieldDef fields = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.GetTableInfoResponse)
  return target;
}

size_t GetTableInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.GetTableInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .objectstore.FieldDef fields = 1;
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->_impl_.fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTableInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTableInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTableInfoResponse::GetClassData() const { return &_class_data_; }


void GetTableInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTableInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetTableInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.GetTableInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.fields_.MergeFrom(from._impl_.fields_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTableInfoResponse::CopyFrom(const GetTableInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.GetTableInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTableInfoResponse::IsInitialized() const {
  return true;
}

void GetTableInfoResponse::InternalSwap(GetTableInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.fields_.InternalSwap(&other->_impl_.fields_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTableInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[4]);
}

// ===================================================================

class TransactionRequest::_Internal {
 public:
  static const ::objectstore::StartTransactionRequest& starttransaction(const TransactionRequest* msg);
  static const ::objectstore::InsertRowRequest& insertrow(const TransactionRequest* msg);
  static const ::objectstore::DeleteRowRequest& deleterow(const TransactionRequest* msg);
  static const ::objectstore::QueryRowsRequest& queryrows(const TransactionRequest* msg);
  static const ::objectstore::UpdateRowRequest& updaterow(const TransactionRequest* msg);
  static const ::objectstore::CommitTransactionRequest& committransaction(const TransactionRequest* msg);
  static const ::objectstore::RollbackTransactionRequest& rollbacktransaction(const TransactionRequest* msg);
};

const ::objectstore::StartTransactionRequest&
TransactionRequest::_Internal::starttransaction(const TransactionRequest* msg) {
  return *msg->_impl_.payload_.starttransaction_;
}
const ::objectstore::InsertRowRequest&
TransactionRequest::_Internal::insertrow(const TransactionRequest* msg) {
  return *msg->_impl_.payload_.insertrow_;
}
const ::objectstore::DeleteRowRequest&
TransactionRequest::_Internal::deleterow(const TransactionRequest* msg) {
  return *msg->_impl_.payload_.deleterow_;
}
const ::objectstore::QueryRowsRequest&
TransactionRequest::_Internal::queryrows(const TransactionRequest* msg) {
  return *msg->_impl_.payload_.queryrows_;
}
const ::objectstore::UpdateRowRequest&
TransactionRequest::_Internal::updaterow(const TransactionRequest* msg) {
  return *msg->_impl_.payload_.updaterow_;
}
const ::objectstore::CommitTransactionRequest&
TransactionRequest::_Internal::committransaction(const TransactionRequest* msg) {
  return *msg->_impl_.payload_.committransaction_;
}
const ::objectstore::RollbackTransactionRequest&
TransactionRequest::_Internal::rollbacktransaction(const TransactionRequest* msg) {
  return *msg->_impl_.payload_.rollbacktransaction_;
}
void TransactionRequest::set_allocated_starttransaction(::objectstore::StartTransactionRequest* starttransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (starttransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(starttransaction);
    if (message_arena != submessage_arena) {
      starttransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, starttransaction, submessage_arena);
    }
    set_has_starttransaction();
    _impl_.payload_.starttransaction_ = starttransaction;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionRequest.startTransaction)
}
void TransactionRequest::set_allocated_insertrow(::objectstore::InsertRowRequest* insertrow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (insertrow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insertrow);
    if (message_arena != submessage_arena) {
      insertrow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insertrow, submessage_arena);
    }
    set_has_insertrow();
    _impl_.payload_.insertrow_ = insertrow;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionRequest.insertRow)
}
void TransactionRequest::set_allocated_deleterow(::objectstore::DeleteRowRequest* deleterow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (deleterow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(deleterow);
    if (message_arena != submessage_arena) {
      deleterow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, deleterow, submessage_arena);
    }
    set_has_deleterow();
    _impl_.payload_.deleterow_ = deleterow;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionRequest.deleteRow)
}
void TransactionRequest::set_allocated_queryrows(::objectstore::QueryRowsRequest* queryrows) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (queryrows) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(queryrows);
    if (message_arena != submessage_arena) {
      queryrows = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, queryrows, submessage_arena);
    }
    set_has_queryrows();
    _impl_.payload_.queryrows_ = queryrows;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionRequest.queryRows)
}
void TransactionRequest::set_allocated_updaterow(::objectstore::UpdateRowRequest* updaterow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (updaterow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(updaterow);
    if (message_arena != submessage_arena) {
      updaterow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updaterow, submessage_arena);
    }
    set_has_updaterow();
    _impl_.payload_.updaterow_ = updaterow;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionRequest.updateRow)
}
void TransactionRequest::set_allocated_committransaction(::objectstore::CommitTransactionRequest* committransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (committransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(committransaction);
    if (message_arena != submessage_arena) {
      committransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, committransaction, submessage_arena);
    }
    set_has_committransaction();
    _impl_.payload_.committransaction_ = committransaction;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionRequest.commitTransaction)
}
void TransactionRequest::set_allocated_rollbacktransaction(::objectstore::RollbackTransactionRequest* rollbacktransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (rollbacktransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(rollbacktransaction);
    if (message_arena != submessage_arena) {
      rollbacktransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rollbacktransaction, submessage_arena);
    }
    set_has_rollbacktransaction();
    _impl_.payload_.rollbacktransaction_ = rollbacktransaction;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionRequest.rollbackTransaction)
}
TransactionRequest::TransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.TransactionRequest)
}
TransactionRequest::TransactionRequest(const TransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransactionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kStartTransaction: {
      _this->_internal_mutable_starttransaction()->::objectstore::StartTransactionRequest::MergeFrom(
          from._internal_starttransaction());
      break;
    }
    case kInsertRow: {
      _this->_internal_mutable_insertrow()->::objectstore::InsertRowRequest::MergeFrom(
          from._internal_insertrow());
      break;
    }
    case kDeleteRow: {
      _this->_internal_mutable_deleterow()->::objectstore::DeleteRowRequest::MergeFrom(
          from._internal_deleterow());
      break;
    }
    case kQueryRows: {
      _this->_internal_mutable_queryrows()->::objectstore::QueryRowsRequest::MergeFrom(
          from._internal_queryrows());
      break;
    }
    case kUpdateRow: {
      _this->_internal_mutable_updaterow()->::objectstore::UpdateRowRequest::MergeFrom(
          from._internal_updaterow());
      break;
    }
    case kCommitTransaction: {
      _this->_internal_mutable_committransaction()->::objectstore::CommitTransactionRequest::MergeFrom(
          from._internal_committransaction());
      break;
    }
    case kRollbackTransaction: {
      _this->_internal_mutable_rollbacktransaction()->::objectstore::RollbackTransactionRequest::MergeFrom(
          from._internal_rollbacktransaction());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:objectstore.TransactionRequest)
}

inline void TransactionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_payload();
}

TransactionRequest::~TransactionRequest() {
  // @@protoc_insertion_point(destructor:objectstore.TransactionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void TransactionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransactionRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:objectstore.TransactionRequest)
  switch (payload_case()) {
    case kStartTransaction: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.starttransaction_;
      }
      break;
    }
    case kInsertRow: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.insertrow_;
      }
      break;
    }
    case kDeleteRow: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.deleterow_;
      }
      break;
    }
    case kQueryRows: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.queryrows_;
      }
      break;
    }
    case kUpdateRow: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.updaterow_;
      }
      break;
    }
    case kCommitTransaction: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.committransaction_;
      }
      break;
    }
    case kRollbackTransaction: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.rollbacktransaction_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


void TransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.TransactionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .objectstore.StartTransactionRequest startTransaction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_starttransaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.InsertRowRequest insertRow = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_insertrow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.DeleteRowRequest deleteRow = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_deleterow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.QueryRowsRequest queryRows = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_queryrows(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.UpdateRowRequest updateRow = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_updaterow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.CommitTransactionRequest commitTransaction = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_committransaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.RollbackTransactionRequest rollbackTransaction = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_rollbacktransaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransactionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.TransactionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .objectstore.StartTransactionRequest startTransaction = 1;
  if (_internal_has_starttransaction()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::starttransaction(this),
        _Internal::starttransaction(this).GetCachedSize(), target, stream);
  }

  // .objectstore.InsertRowRequest insertRow = 2;
  if (_internal_has_insertrow()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::insertrow(this),
        _Internal::insertrow(this).GetCachedSize(), target, stream);
  }

  // .objectstore.DeleteRowRequest deleteRow = 3;
  if (_internal_has_deleterow()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::deleterow(this),
        _Internal::deleterow(this).GetCachedSize(), target, stream);
  }

  // .objectstore.QueryRowsRequest queryRows = 4;
  if (_internal_has_queryrows()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::queryrows(this),
        _Internal::queryrows(this).GetCachedSize(), target, stream);
  }

  // .objectstore.UpdateRowRequest updateRow = 5;
  if (_internal_has_updaterow()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::updaterow(this),
        _Internal::updaterow(this).GetCachedSize(), target, stream);
  }

  // .objectstore.CommitTransactionRequest commitTransaction = 6;
  if (_internal_has_committransaction()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::committransaction(this),
        _Internal::committransaction(this).GetCachedSize(), target, stream);
  }

  // .objectstore.RollbackTransactionRequest rollbackTransaction = 7;
  if (_internal_has_rollbacktransaction()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::rollbacktransaction(this),
        _Internal::rollbacktransaction(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.TransactionRequest)
  return target;
}

size_t TransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.TransactionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .objectstore.StartTransactionRequest startTransaction = 1;
    case kStartTransaction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.starttransaction_);
      break;
    }
    // .objectstore.InsertRowRequest insertRow = 2;
    case kInsertRow: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.insertrow_);
      break;
    }
    // .objectstore.DeleteRowRequest deleteRow = 3;
    case kDeleteRow: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.deleterow_);
      break;
    }
    // .objectstore.QueryRowsRequest queryRows = 4;
    case kQueryRows: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.queryrows_);
      break;
    }
    // .objectstore.UpdateRowRequest updateRow = 5;
    case kUpdateRow: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.updaterow_);
      break;
    }
    // .objectstore.CommitTransactionRequest commitTransaction = 6;
    case kCommitTransaction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.committransaction_);
      break;
    }
    // .objectstore.RollbackTransactionRequest rollbackTransaction = 7;
    case kRollbackTransaction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.rollbacktransaction_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransactionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransactionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransactionRequest::GetClassData() const { return &_class_data_; }


void TransactionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransactionRequest*>(&to_msg);
  auto& from = static_cast<const TransactionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.TransactionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kStartTransaction: {
      _this->_internal_mutable_starttransaction()->::objectstore::StartTransactionRequest::MergeFrom(
          from._internal_starttransaction());
      break;
    }
    case kInsertRow: {
      _this->_internal_mutable_insertrow()->::objectstore::InsertRowRequest::MergeFrom(
          from._internal_insertrow());
      break;
    }
    case kDeleteRow: {
      _this->_internal_mutable_deleterow()->::objectstore::DeleteRowRequest::MergeFrom(
          from._internal_deleterow());
      break;
    }
    case kQueryRows: {
      _this->_internal_mutable_queryrows()->::objectstore::QueryRowsRequest::MergeFrom(
          from._internal_queryrows());
      break;
    }
    case kUpdateRow: {
      _this->_internal_mutable_updaterow()->::objectstore::UpdateRowRequest::MergeFrom(
          from._internal_updaterow());
      break;
    }
    case kCommitTransaction: {
      _this->_internal_mutable_committransaction()->::objectstore::CommitTransactionRequest::MergeFrom(
          from._internal_committransaction());
      break;
    }
    case kRollbackTransaction: {
      _this->_internal_mutable_rollbacktransaction()->::objectstore::RollbackTransactionRequest::MergeFrom(
          from._internal_rollbacktransaction());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionRequest::CopyFrom(const TransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.TransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionRequest::IsInitialized() const {
  return true;
}

void TransactionRequest::InternalSwap(TransactionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[5]);
}

// ===================================================================

class TransactionResponse::_Internal {
 public:
  static const ::objectstore::StartTransactionResponse& starttransaction(const TransactionResponse* msg);
  static const ::objectstore::InsertRowResponse& insertrow(const TransactionResponse* msg);
  static const ::objectstore::DeleteRowResponse& deleterow(const TransactionResponse* msg);
  static const ::objectstore::QueryRowResponse& queryrows(const TransactionResponse* msg);
  static const ::objectstore::UpdateRowResponse& updaterow(const TransactionResponse* msg);
  static const ::objectstore::CommitTransactionResponse& committransaction(const TransactionResponse* msg);
  static const ::objectstore::RollbackTransactionResponse& rollbacktransaction(const TransactionResponse* msg);
  static const ::objectstore::ErrorResponse& error(const TransactionResponse* msg);
};

const ::objectstore::StartTransactionResponse&
TransactionResponse::_Internal::starttransaction(const TransactionResponse* msg) {
  return *msg->_impl_.payload_.starttransaction_;
}
const ::objectstore::InsertRowResponse&
TransactionResponse::_Internal::insertrow(const TransactionResponse* msg) {
  return *msg->_impl_.payload_.insertrow_;
}
const ::objectstore::DeleteRowResponse&
TransactionResponse::_Internal::deleterow(const TransactionResponse* msg) {
  return *msg->_impl_.payload_.deleterow_;
}
const ::objectstore::QueryRowResponse&
TransactionResponse::_Internal::queryrows(const TransactionResponse* msg) {
  return *msg->_impl_.payload_.queryrows_;
}
const ::objectstore::UpdateRowResponse&
TransactionResponse::_Internal::updaterow(const TransactionResponse* msg) {
  return *msg->_impl_.payload_.updaterow_;
}
const ::objectstore::CommitTransactionResponse&
TransactionResponse::_Internal::committransaction(const TransactionResponse* msg) {
  return *msg->_impl_.payload_.committransaction_;
}
const ::objectstore::RollbackTransactionResponse&
TransactionResponse::_Internal::rollbacktransaction(const TransactionResponse* msg) {
  return *msg->_impl_.payload_.rollbacktransaction_;
}
const ::objectstore::ErrorResponse&
TransactionResponse::_Internal::error(const TransactionResponse* msg) {
  return *msg->_impl_.payload_.error_;
}
void TransactionResponse::set_allocated_starttransaction(::objectstore::StartTransactionResponse* starttransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (starttransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(starttransaction);
    if (message_arena != submessage_arena) {
      starttransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, starttransaction, submessage_arena);
    }
    set_has_starttransaction();
    _impl_.payload_.starttransaction_ = starttransaction;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionResponse.startTransaction)
}
void TransactionResponse::set_allocated_insertrow(::objectstore::InsertRowResponse* insertrow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (insertrow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insertrow);
    if (message_arena != submessage_arena) {
      insertrow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insertrow, submessage_arena);
    }
    set_has_insertrow();
    _impl_.payload_.insertrow_ = insertrow;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionResponse.insertRow)
}
void TransactionResponse::set_allocated_deleterow(::objectstore::DeleteRowResponse* deleterow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (deleterow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(deleterow);
    if (message_arena != submessage_arena) {
      deleterow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, deleterow, submessage_arena);
    }
    set_has_deleterow();
    _impl_.payload_.deleterow_ = deleterow;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionResponse.deleteRow)
}
void TransactionResponse::set_allocated_queryrows(::objectstore::QueryRowResponse* queryrows) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (queryrows) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(queryrows);
    if (message_arena != submessage_arena) {
      queryrows = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, queryrows, submessage_arena);
    }
    set_has_queryrows();
    _impl_.payload_.queryrows_ = queryrows;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionResponse.queryRows)
}
void TransactionResponse::set_allocated_updaterow(::objectstore::UpdateRowResponse* updaterow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (updaterow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(updaterow);
    if (message_arena != submessage_arena) {
      updaterow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updaterow, submessage_arena);
    }
    set_has_updaterow();
    _impl_.payload_.updaterow_ = updaterow;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionResponse.updateRow)
}
void TransactionResponse::set_allocated_committransaction(::objectstore::CommitTransactionResponse* committransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (committransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(committransaction);
    if (message_arena != submessage_arena) {
      committransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, committransaction, submessage_arena);
    }
    set_has_committransaction();
    _impl_.payload_.committransaction_ = committransaction;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionResponse.commitTransaction)
}
void TransactionResponse::set_allocated_rollbacktransaction(::objectstore::RollbackTransactionResponse* rollbacktransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (rollbacktransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(rollbacktransaction);
    if (message_arena != submessage_arena) {
      rollbacktransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rollbacktransaction, submessage_arena);
    }
    set_has_rollbacktransaction();
    _impl_.payload_.rollbacktransaction_ = rollbacktransaction;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionResponse.rollbackTransaction)
}
void TransactionResponse::set_allocated_error(::objectstore::ErrorResponse* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    _impl_.payload_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:objectstore.TransactionResponse.error)
}
TransactionResponse::TransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.TransactionResponse)
}
TransactionResponse::TransactionResponse(const TransactionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransactionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kStartTransaction: {
      _this->_internal_mutable_starttransaction()->::objectstore::StartTransactionResponse::MergeFrom(
          from._internal_starttransaction());
      break;
    }
    case kInsertRow: {
      _this->_internal_mutable_insertrow()->::objectstore::InsertRowResponse::MergeFrom(
          from._internal_insertrow());
      break;
    }
    case kDeleteRow: {
      _this->_internal_mutable_deleterow()->::objectstore::DeleteRowResponse::MergeFrom(
          from._internal_deleterow());
      break;
    }
    case kQueryRows: {
      _this->_internal_mutable_queryrows()->::objectstore::QueryRowResponse::MergeFrom(
          from._internal_queryrows());
      break;
    }
    case kUpdateRow: {
      _this->_internal_mutable_updaterow()->::objectstore::UpdateRowResponse::MergeFrom(
          from._internal_updaterow());
      break;
    }
    case kCommitTransaction: {
      _this->_internal_mutable_committransaction()->::objectstore::CommitTransactionResponse::MergeFrom(
          from._internal_committransaction());
      break;
    }
    case kRollbackTransaction: {
      _this->_internal_mutable_rollbacktransaction()->::objectstore::RollbackTransactionResponse::MergeFrom(
          from._internal_rollbacktransaction());
      break;
    }
    case kError: {
      _this->_internal_mutable_error()->::objectstore::ErrorResponse::MergeFrom(
          from._internal_error());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:objectstore.TransactionResponse)
}

inline void TransactionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_payload();
}

TransactionResponse::~TransactionResponse() {
  // @@protoc_insertion_point(destructor:objectstore.TransactionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransactionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void TransactionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransactionResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:objectstore.TransactionResponse)
  switch (payload_case()) {
    case kStartTransaction: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.starttransaction_;
      }
      break;
    }
    case kInsertRow: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.insertrow_;
      }
      break;
    }
    case kDeleteRow: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.deleterow_;
      }
      break;
    }
    case kQueryRows: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.queryrows_;
      }
      break;
    }
    case kUpdateRow: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.updaterow_;
      }
      break;
    }
    case kCommitTransaction: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.committransaction_;
      }
      break;
    }
    case kRollbackTransaction: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.rollbacktransaction_;
      }
      break;
    }
    case kError: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.error_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


void TransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.TransactionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .objectstore.StartTransactionResponse startTransaction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_starttransaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.InsertRowResponse insertRow = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_insertrow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.DeleteRowResponse deleteRow = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_deleterow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.QueryRowResponse queryRows = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_queryrows(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.UpdateRowResponse updateRow = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_updaterow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.CommitTransactionResponse commitTransaction = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_committransaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.RollbackTransactionResponse rollbackTransaction = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_rollbacktransaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .objectstore.ErrorResponse error = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransactionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.TransactionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .objectstore.StartTransactionResponse startTransaction = 1;
  if (_internal_has_starttransaction()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::starttransaction(this),
        _Internal::starttransaction(this).GetCachedSize(), target, stream);
  }

  // .objectstore.InsertRowResponse insertRow = 2;
  if (_internal_has_insertrow()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::insertrow(this),
        _Internal::insertrow(this).GetCachedSize(), target, stream);
  }

  // .objectstore.DeleteRowResponse deleteRow = 3;
  if (_internal_has_deleterow()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::deleterow(this),
        _Internal::deleterow(this).GetCachedSize(), target, stream);
  }

  // .objectstore.QueryRowResponse queryRows = 4;
  if (_internal_has_queryrows()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::queryrows(this),
        _Internal::queryrows(this).GetCachedSize(), target, stream);
  }

  // .objectstore.UpdateRowResponse updateRow = 5;
  if (_internal_has_updaterow()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::updaterow(this),
        _Internal::updaterow(this).GetCachedSize(), target, stream);
  }

  // .objectstore.CommitTransactionResponse commitTransaction = 6;
  if (_internal_has_committransaction()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::committransaction(this),
        _Internal::committransaction(this).GetCachedSize(), target, stream);
  }

  // .objectstore.RollbackTransactionResponse rollbackTransaction = 7;
  if (_internal_has_rollbacktransaction()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::rollbacktransaction(this),
        _Internal::rollbacktransaction(this).GetCachedSize(), target, stream);
  }

  // .objectstore.ErrorResponse error = 8;
  if (_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.TransactionResponse)
  return target;
}

size_t TransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.TransactionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .objectstore.StartTransactionResponse startTransaction = 1;
    case kStartTransaction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.starttransaction_);
      break;
    }
    // .objectstore.InsertRowResponse insertRow = 2;
    case kInsertRow: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.insertrow_);
      break;
    }
    // .objectstore.DeleteRowResponse deleteRow = 3;
    case kDeleteRow: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.deleterow_);
      break;
    }
    // .objectstore.QueryRowResponse queryRows = 4;
    case kQueryRows: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.queryrows_);
      break;
    }
    // .objectstore.UpdateRowResponse updateRow = 5;
    case kUpdateRow: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.updaterow_);
      break;
    }
    // .objectstore.CommitTransactionResponse commitTransaction = 6;
    case kCommitTransaction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.committransaction_);
      break;
    }
    // .objectstore.RollbackTransactionResponse rollbackTransaction = 7;
    case kRollbackTransaction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.rollbacktransaction_);
      break;
    }
    // .objectstore.ErrorResponse error = 8;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.error_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransactionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransactionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransactionResponse::GetClassData() const { return &_class_data_; }


void TransactionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransactionResponse*>(&to_msg);
  auto& from = static_cast<const TransactionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.TransactionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kStartTransaction: {
      _this->_internal_mutable_starttransaction()->::objectstore::StartTransactionResponse::MergeFrom(
          from._internal_starttransaction());
      break;
    }
    case kInsertRow: {
      _this->_internal_mutable_insertrow()->::objectstore::InsertRowResponse::MergeFrom(
          from._internal_insertrow());
      break;
    }
    case kDeleteRow: {
      _this->_internal_mutable_deleterow()->::objectstore::DeleteRowResponse::MergeFrom(
          from._internal_deleterow());
      break;
    }
    case kQueryRows: {
      _this->_internal_mutable_queryrows()->::objectstore::QueryRowResponse::MergeFrom(
          from._internal_queryrows());
      break;
    }
    case kUpdateRow: {
      _this->_internal_mutable_updaterow()->::objectstore::UpdateRowResponse::MergeFrom(
          from._internal_updaterow());
      break;
    }
    case kCommitTransaction: {
      _this->_internal_mutable_committransaction()->::objectstore::CommitTransactionResponse::MergeFrom(
          from._internal_committransaction());
      break;
    }
    case kRollbackTransaction: {
      _this->_internal_mutable_rollbacktransaction()->::objectstore::RollbackTransactionResponse::MergeFrom(
          from._internal_rollbacktransaction());
      break;
    }
    case kError: {
      _this->_internal_mutable_error()->::objectstore::ErrorResponse::MergeFrom(
          from._internal_error());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionResponse::CopyFrom(const TransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.TransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionResponse::IsInitialized() const {
  return true;
}

void TransactionResponse::InternalSwap(TransactionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[6]);
}

// ===================================================================

class FieldData::_Internal {
 public:
};

FieldData::FieldData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.FieldData)
}
FieldData::FieldData(const FieldData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FieldData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kIntMember: {
      _this->_internal_set_intmember(from._internal_intmember());
      break;
    }
    case kFloatMember: {
      _this->_internal_set_floatmember(from._internal_floatmember());
      break;
    }
    case kBoolMember: {
      _this->_internal_set_boolmember(from._internal_boolmember());
      break;
    }
    case kStringMember: {
      _this->_internal_set_stringmember(from._internal_stringmember());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:objectstore.FieldData)
}

inline void FieldData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_payload();
}

FieldData::~FieldData() {
  // @@protoc_insertion_point(destructor:objectstore.FieldData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FieldData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void FieldData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FieldData::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:objectstore.FieldData)
  switch (payload_case()) {
    case kIntMember: {
      // No need to clear
      break;
    }
    case kFloatMember: {
      // No need to clear
      break;
    }
    case kBoolMember: {
      // No need to clear
      break;
    }
    case kStringMember: {
      _impl_.payload_.stringmember_.Destroy();
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


void FieldData::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.FieldData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FieldData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 intMember = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_intmember(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double floatMember = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _internal_set_floatmember(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool boolMember = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _internal_set_boolmember(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string stringMember = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_stringmember();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "objectstore.FieldData.stringMember"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FieldData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.FieldData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 intMember = 1;
  if (_internal_has_intmember()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_intmember(), target);
  }

  // double floatMember = 2;
  if (_internal_has_floatmember()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_floatmember(), target);
  }

  // bool boolMember = 3;
  if (_internal_has_boolmember()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_boolmember(), target);
  }

  // string stringMember = 4;
  if (_internal_has_stringmember()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stringmember().data(), static_cast<int>(this->_internal_stringmember().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "objectstore.FieldData.stringMember");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_stringmember(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.FieldData)
  return target;
}

size_t FieldData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.FieldData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // int64 intMember = 1;
    case kIntMember: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_intmember());
      break;
    }
    // double floatMember = 2;
    case kFloatMember: {
      total_size += 1 + 8;
      break;
    }
    // bool boolMember = 3;
    case kBoolMember: {
      total_size += 1 + 1;
      break;
    }
    // string stringMember = 4;
    case kStringMember: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_stringmember());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FieldData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FieldData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FieldData::GetClassData() const { return &_class_data_; }


void FieldData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FieldData*>(&to_msg);
  auto& from = static_cast<const FieldData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.FieldData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kIntMember: {
      _this->_internal_set_intmember(from._internal_intmember());
      break;
    }
    case kFloatMember: {
      _this->_internal_set_floatmember(from._internal_floatmember());
      break;
    }
    case kBoolMember: {
      _this->_internal_set_boolmember(from._internal_boolmember());
      break;
    }
    case kStringMember: {
      _this->_internal_set_stringmember(from._internal_stringmember());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FieldData::CopyFrom(const FieldData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.FieldData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldData::IsInitialized() const {
  return true;
}

void FieldData::InternalSwap(FieldData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FieldData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[7]);
}

// ===================================================================

class Field::_Internal {
 public:
  static const ::objectstore::FieldData& data(const Field* msg);
};

const ::objectstore::FieldData&
Field::_Internal::data(const Field* msg) {
  return *msg->_impl_.data_;
}
Field::Field(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.Field)
}
Field::Field(const Field& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Field* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::objectstore::FieldData(*from._impl_.data_);
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:objectstore.Field)
}

inline void Field::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:objectstore.Field)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Field::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.data_;
}

void Field::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.Field)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Field::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "objectstore.Field.name"));
        } else
          goto handle_unusual;
        continue;
      // .objectstore.FieldType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::objectstore::FieldType>(val));
        } else
          goto handle_unusual;
        continue;
      // .objectstore.FieldData data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Field::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.Field)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "objectstore.Field.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .objectstore.FieldType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // .objectstore.FieldData data = 3;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.Field)
  return target;
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.Field)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .objectstore.FieldData data = 3;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // .objectstore.FieldType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Field::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Field::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Field::GetClassData() const { return &_class_data_; }


void Field::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Field*>(&to_msg);
  auto& from = static_cast<const Field&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.Field)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::objectstore::FieldData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::InternalSwap(Field* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Field, _impl_.type_)
      + sizeof(Field::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Field, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Field::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[8]);
}

// ===================================================================

class StartTransactionRequest::_Internal {
 public:
};

StartTransactionRequest::StartTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.StartTransactionRequest)
}
StartTransactionRequest::StartTransactionRequest(const StartTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StartTransactionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tablename_){}
    , decltype(_impl_.writable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tablename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tablename().empty()) {
    _this->_impl_.tablename_.Set(from._internal_tablename(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.writable_ = from._impl_.writable_;
  // @@protoc_insertion_point(copy_constructor:objectstore.StartTransactionRequest)
}

inline void StartTransactionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tablename_){}
    , decltype(_impl_.writable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tablename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StartTransactionRequest::~StartTransactionRequest() {
  // @@protoc_insertion_point(destructor:objectstore.StartTransactionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartTransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tablename_.Destroy();
}

void StartTransactionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StartTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.StartTransactionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tablename_.ClearToEmpty();
  _impl_.writable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTransactionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tableName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tablename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "objectstore.StartTransactionRequest.tableName"));
        } else
          goto handle_unusual;
        continue;
      // bool writable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.writable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartTransactionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.StartTransactionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (!this->_internal_tablename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablename().data(), static_cast<int>(this->_internal_tablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "objectstore.StartTransactionRequest.tableName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tablename(), target);
  }

  // bool writable = 2;
  if (this->_internal_writable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_writable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.StartTransactionRequest)
  return target;
}

size_t StartTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.StartTransactionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tableName = 1;
  if (!this->_internal_tablename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablename());
  }

  // bool writable = 2;
  if (this->_internal_writable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartTransactionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StartTransactionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartTransactionRequest::GetClassData() const { return &_class_data_; }


void StartTransactionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StartTransactionRequest*>(&to_msg);
  auto& from = static_cast<const StartTransactionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.StartTransactionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tablename().empty()) {
    _this->_internal_set_tablename(from._internal_tablename());
  }
  if (from._internal_writable() != 0) {
    _this->_internal_set_writable(from._internal_writable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartTransactionRequest::CopyFrom(const StartTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.StartTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTransactionRequest::IsInitialized() const {
  return true;
}

void StartTransactionRequest::InternalSwap(StartTransactionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tablename_, lhs_arena,
      &other->_impl_.tablename_, rhs_arena
  );
  swap(_impl_.writable_, other->_impl_.writable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTransactionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[9]);
}

// ===================================================================

class StartTransactionResponse::_Internal {
 public:
};

StartTransactionResponse::StartTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.StartTransactionResponse)
}
StartTransactionResponse::StartTransactionResponse(const StartTransactionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StartTransactionResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.StartTransactionResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartTransactionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartTransactionResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StartTransactionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[10]);
}

// ===================================================================

class CommitTransactionRequest::_Internal {
 public:
};

CommitTransactionRequest::CommitTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.CommitTransactionRequest)
}
CommitTransactionRequest::CommitTransactionRequest(const CommitTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CommitTransactionRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.CommitTransactionRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommitTransactionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommitTransactionRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CommitTransactionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[11]);
}

// ===================================================================

class CommitTransactionResponse::_Internal {
 public:
};

CommitTransactionResponse::CommitTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.CommitTransactionResponse)
}
CommitTransactionResponse::CommitTransactionResponse(const CommitTransactionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CommitTransactionResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.CommitTransactionResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommitTransactionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommitTransactionResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CommitTransactionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[12]);
}

// ===================================================================

class RollbackTransactionRequest::_Internal {
 public:
};

RollbackTransactionRequest::RollbackTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.RollbackTransactionRequest)
}
RollbackTransactionRequest::RollbackTransactionRequest(const RollbackTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RollbackTransactionRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.RollbackTransactionRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RollbackTransactionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RollbackTransactionRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RollbackTransactionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[13]);
}

// ===================================================================

class RollbackTransactionResponse::_Internal {
 public:
};

RollbackTransactionResponse::RollbackTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.RollbackTransactionResponse)
}
RollbackTransactionResponse::RollbackTransactionResponse(const RollbackTransactionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RollbackTransactionResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.RollbackTransactionResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RollbackTransactionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RollbackTransactionResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RollbackTransactionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[14]);
}

// ===================================================================

class InsertRowRequest::_Internal {
 public:
};

InsertRowRequest::InsertRowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.InsertRowRequest)
}
InsertRowRequest::InsertRowRequest(const InsertRowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InsertRowRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.InsertRowRequest)
}

inline void InsertRowRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InsertRowRequest::~InsertRowRequest() {
  // @@protoc_insertion_point(destructor:objectstore.InsertRowRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InsertRowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedPtrField();
}

void InsertRowRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InsertRowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.InsertRowRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InsertRowRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .objectstore.Field value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_value(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InsertRowRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.InsertRowRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .objectstore.Field value = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_value_size()); i < n; i++) {
    const auto& repfield = this->_internal_value(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.InsertRowRequest)
  return target;
}

size_t InsertRowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.InsertRowRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .objectstore.Field value = 1;
  total_size += 1UL * this->_internal_value_size();
  for (const auto& msg : this->_impl_.value_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InsertRowRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InsertRowRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InsertRowRequest::GetClassData() const { return &_class_data_; }


void InsertRowRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InsertRowRequest*>(&to_msg);
  auto& from = static_cast<const InsertRowRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.InsertRowRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InsertRowRequest::CopyFrom(const InsertRowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.InsertRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertRowRequest::IsInitialized() const {
  return true;
}

void InsertRowRequest::InternalSwap(InsertRowRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InsertRowRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[15]);
}

// ===================================================================

class InsertRowResponse::_Internal {
 public:
};

InsertRowResponse::InsertRowResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.InsertRowResponse)
}
InsertRowResponse::InsertRowResponse(const InsertRowResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  InsertRowResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.InsertRowResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InsertRowResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InsertRowResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata InsertRowResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[16]);
}

// ===================================================================

class DeleteRowRequest::_Internal {
 public:
};

DeleteRowRequest::DeleteRowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.DeleteRowRequest)
}
DeleteRowRequest::DeleteRowRequest(const DeleteRowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteRowRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.conditions_){from._impl_.conditions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.DeleteRowRequest)
}

inline void DeleteRowRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.conditions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteRowRequest::~DeleteRowRequest() {
  // @@protoc_insertion_point(destructor:objectstore.DeleteRowRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.conditions_.~RepeatedPtrField();
}

void DeleteRowRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteRowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.DeleteRowRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRowRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .objectstore.Field conditions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_conditions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRowRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.DeleteRowRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .objectstore.Field conditions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_conditions_size()); i < n; i++) {
    const auto& repfield = this->_internal_conditions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.DeleteRowRequest)
  return target;
}

size_t DeleteRowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.DeleteRowRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .objectstore.Field conditions = 1;
  total_size += 1UL * this->_internal_conditions_size();
  for (const auto& msg : this->_impl_.conditions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRowRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteRowRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRowRequest::GetClassData() const { return &_class_data_; }


void DeleteRowRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteRowRequest*>(&to_msg);
  auto& from = static_cast<const DeleteRowRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.DeleteRowRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.conditions_.MergeFrom(from._impl_.conditions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRowRequest::CopyFrom(const DeleteRowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.DeleteRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRowRequest::IsInitialized() const {
  return true;
}

void DeleteRowRequest::InternalSwap(DeleteRowRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRowRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[17]);
}

// ===================================================================

class DeleteRowResponse::_Internal {
 public:
};

DeleteRowResponse::DeleteRowResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.DeleteRowResponse)
}
DeleteRowResponse::DeleteRowResponse(const DeleteRowResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeleteRowResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.DeleteRowResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRowResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRowResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRowResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[18]);
}

// ===================================================================

class QueryRowsRequest::_Internal {
 public:
};

QueryRowsRequest::QueryRowsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.QueryRowsRequest)
}
QueryRowsRequest::QueryRowsRequest(const QueryRowsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryRowsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.conditions_){from._impl_.conditions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.QueryRowsRequest)
}

inline void QueryRowsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.conditions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryRowsRequest::~QueryRowsRequest() {
  // @@protoc_insertion_point(destructor:objectstore.QueryRowsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryRowsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.conditions_.~RepeatedPtrField();
}

void QueryRowsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryRowsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.QueryRowsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryRowsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .objectstore.Field conditions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_conditions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryRowsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.QueryRowsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .objectstore.Field conditions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_conditions_size()); i < n; i++) {
    const auto& repfield = this->_internal_conditions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.QueryRowsRequest)
  return target;
}

size_t QueryRowsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.QueryRowsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .objectstore.Field conditions = 1;
  total_size += 1UL * this->_internal_conditions_size();
  for (const auto& msg : this->_impl_.conditions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryRowsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryRowsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryRowsRequest::GetClassData() const { return &_class_data_; }


void QueryRowsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryRowsRequest*>(&to_msg);
  auto& from = static_cast<const QueryRowsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.QueryRowsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.conditions_.MergeFrom(from._impl_.conditions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryRowsRequest::CopyFrom(const QueryRowsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.QueryRowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRowsRequest::IsInitialized() const {
  return true;
}

void QueryRowsRequest::InternalSwap(QueryRowsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRowsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[19]);
}

// ===================================================================

class QueryRowResponse::_Internal {
 public:
};

QueryRowResponse::QueryRowResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.QueryRowResponse)
}
QueryRowResponse::QueryRowResponse(const QueryRowResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryRowResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){from._impl_.key_}
    , decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.QueryRowResponse)
}

inline void QueryRowResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){arena}
    , decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryRowResponse::~QueryRowResponse() {
  // @@protoc_insertion_point(destructor:objectstore.QueryRowResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryRowResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.~RepeatedPtrField();
  _impl_.value_.~RepeatedPtrField();
}

void QueryRowResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryRowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.QueryRowResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.Clear();
  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryRowResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .objectstore.Field key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_key(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .objectstore.Field value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_value(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryRowResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.QueryRowResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .objectstore.Field key = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_key_size()); i < n; i++) {
    const auto& repfield = this->_internal_key(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .objectstore.Field value = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_value_size()); i < n; i++) {
    const auto& repfield = this->_internal_value(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.QueryRowResponse)
  return target;
}

size_t QueryRowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.QueryRowResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .objectstore.Field key = 1;
  total_size += 1UL * this->_internal_key_size();
  for (const auto& msg : this->_impl_.key_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .objectstore.Field value = 2;
  total_size += 1UL * this->_internal_value_size();
  for (const auto& msg : this->_impl_.value_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryRowResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryRowResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryRowResponse::GetClassData() const { return &_class_data_; }


void QueryRowResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryRowResponse*>(&to_msg);
  auto& from = static_cast<const QueryRowResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.QueryRowResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.key_.MergeFrom(from._impl_.key_);
  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryRowResponse::CopyFrom(const QueryRowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.QueryRowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRowResponse::IsInitialized() const {
  return true;
}

void QueryRowResponse::InternalSwap(QueryRowResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.key_.InternalSwap(&other->_impl_.key_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRowResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[20]);
}

// ===================================================================

class UpdateRowRequest::_Internal {
 public:
};

UpdateRowRequest::UpdateRowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.UpdateRowRequest)
}
UpdateRowRequest::UpdateRowRequest(const UpdateRowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateRowRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){from._impl_.key_}
    , decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.UpdateRowRequest)
}

inline void UpdateRowRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){arena}
    , decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateRowRequest::~UpdateRowRequest() {
  // @@protoc_insertion_point(destructor:objectstore.UpdateRowRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.~RepeatedPtrField();
  _impl_.value_.~RepeatedPtrField();
}

void UpdateRowRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateRowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.UpdateRowRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.Clear();
  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRowRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .objectstore.Field key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_key(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .objectstore.Field value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_value(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRowRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.UpdateRowRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .objectstore.Field key = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_key_size()); i < n; i++) {
    const auto& repfield = this->_internal_key(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .objectstore.Field value = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_value_size()); i < n; i++) {
    const auto& repfield = this->_internal_value(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.UpdateRowRequest)
  return target;
}

size_t UpdateRowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.UpdateRowRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .objectstore.Field key = 1;
  total_size += 1UL * this->_internal_key_size();
  for (const auto& msg : this->_impl_.key_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .objectstore.Field value = 2;
  total_size += 1UL * this->_internal_value_size();
  for (const auto& msg : this->_impl_.value_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRowRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateRowRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRowRequest::GetClassData() const { return &_class_data_; }


void UpdateRowRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateRowRequest*>(&to_msg);
  auto& from = static_cast<const UpdateRowRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.UpdateRowRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.key_.MergeFrom(from._impl_.key_);
  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRowRequest::CopyFrom(const UpdateRowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.UpdateRowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRowRequest::IsInitialized() const {
  return true;
}

void UpdateRowRequest::InternalSwap(UpdateRowRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.key_.InternalSwap(&other->_impl_.key_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRowRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[21]);
}

// ===================================================================

class UpdateRowResponse::_Internal {
 public:
};

UpdateRowResponse::UpdateRowResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:objectstore.UpdateRowResponse)
}
UpdateRowResponse::UpdateRowResponse(const UpdateRowResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateRowResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:objectstore.UpdateRowResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRowResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRowResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateRowResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[22]);
}

// ===================================================================

class ErrorResponse::_Internal {
 public:
};

ErrorResponse::ErrorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:objectstore.ErrorResponse)
}
ErrorResponse::ErrorResponse(const ErrorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ErrorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:objectstore.ErrorResponse)
}

inline void ErrorResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ErrorResponse::~ErrorResponse() {
  // @@protoc_insertion_point(destructor:objectstore.ErrorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ErrorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void ErrorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:objectstore.ErrorResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "objectstore.ErrorResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ErrorResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectstore.ErrorResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "objectstore.ErrorResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectstore.ErrorResponse)
  return target;
}

size_t ErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:objectstore.ErrorResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ErrorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ErrorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ErrorResponse::GetClassData() const { return &_class_data_; }


void ErrorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ErrorResponse*>(&to_msg);
  auto& from = static_cast<const ErrorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectstore.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ErrorResponse::CopyFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectstore.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorResponse::IsInitialized() const {
  return true;
}

void ErrorResponse::InternalSwap(ErrorResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_definition_2eproto_getter, &descriptor_table_definition_2eproto_once,
      file_level_metadata_definition_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace objectstore
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::objectstore::CreateTableRequest*
Arena::CreateMaybeMessage< ::objectstore::CreateTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::CreateTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::GetTableInfoRequest*
Arena::CreateMaybeMessage< ::objectstore::GetTableInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::GetTableInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::FieldDef*
Arena::CreateMaybeMessage< ::objectstore::FieldDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::FieldDef >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::CreateTableResponse*
Arena::CreateMaybeMessage< ::objectstore::CreateTableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::CreateTableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::GetTableInfoResponse*
Arena::CreateMaybeMessage< ::objectstore::GetTableInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::GetTableInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::TransactionRequest*
Arena::CreateMaybeMessage< ::objectstore::TransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::TransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::TransactionResponse*
Arena::CreateMaybeMessage< ::objectstore::TransactionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::TransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::FieldData*
Arena::CreateMaybeMessage< ::objectstore::FieldData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::FieldData >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::Field*
Arena::CreateMaybeMessage< ::objectstore::Field >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::Field >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::StartTransactionRequest*
Arena::CreateMaybeMessage< ::objectstore::StartTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::StartTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::StartTransactionResponse*
Arena::CreateMaybeMessage< ::objectstore::StartTransactionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::StartTransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::CommitTransactionRequest*
Arena::CreateMaybeMessage< ::objectstore::CommitTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::CommitTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::CommitTransactionResponse*
Arena::CreateMaybeMessage< ::objectstore::CommitTransactionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::CommitTransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::RollbackTransactionRequest*
Arena::CreateMaybeMessage< ::objectstore::RollbackTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::RollbackTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::RollbackTransactionResponse*
Arena::CreateMaybeMessage< ::objectstore::RollbackTransactionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::RollbackTransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::InsertRowRequest*
Arena::CreateMaybeMessage< ::objectstore::InsertRowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::InsertRowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::InsertRowResponse*
Arena::CreateMaybeMessage< ::objectstore::InsertRowResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::InsertRowResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::DeleteRowRequest*
Arena::CreateMaybeMessage< ::objectstore::DeleteRowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::DeleteRowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::DeleteRowResponse*
Arena::CreateMaybeMessage< ::objectstore::DeleteRowResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::DeleteRowResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::QueryRowsRequest*
Arena::CreateMaybeMessage< ::objectstore::QueryRowsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::QueryRowsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::QueryRowResponse*
Arena::CreateMaybeMessage< ::objectstore::QueryRowResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::QueryRowResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::UpdateRowRequest*
Arena::CreateMaybeMessage< ::objectstore::UpdateRowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::UpdateRowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::UpdateRowResponse*
Arena::CreateMaybeMessage< ::objectstore::UpdateRowResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::UpdateRowResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::objectstore::ErrorResponse*
Arena::CreateMaybeMessage< ::objectstore::ErrorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::objectstore::ErrorResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
